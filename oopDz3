using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace oopDZ3
{
    class Program
    {

        
        static void Main(string[] args)
        {
            bool isWork = true;

            DataBase dataBase = new DataBase();

            while (isWork)
            {
                Console.WriteLine("1. Вывести всех игроков \n2. Добавить игрока \n3. Удалить игрока \n4. Забанить игрока \n5. Разбанить игрока \n6. Выход");
                int userInput = Convert.ToInt32(Console.ReadLine());
                switch (userInput)
                {
                    case 1:
                        dataBase.ShowAllPlayers();
                        break;
                    case 2:
                        dataBase.CreatePlayer();
                        break;
                    case 3:
                        Console.WriteLine("Введите ID игрока");
                        dataBase.DelitePlayer(UserInput());
                        break;
                    case 4:
                        Console.WriteLine("Введите ID игрока");
                        dataBase.BannedPlayer(UserInput());
                        break;
                    case 5:
                        Console.WriteLine("Введите ID игрока");
                        dataBase.UnBannedPlayer(UserInput());
                        break;
                    case 6:
                        isWork = false;
                        break;
                    default:
                        break;
                }
                Console.ReadKey();
                Console.Clear();
            }
        }

        static int UserInput()
        {
            int userInput = Convert.ToInt32(Console.ReadLine());
            return userInput;
        }
    }

    class DataBase
    {
        private List<Player> _players = new List<Player>();

        private int FindPlayer(int id)
        {
            int result = 0;
            for (int i = 0; i < _players.Count; i++)
            {
                if (id == _players[i].PlayerId)
                    result = i;
            }
            return result;
        }
        private bool CheckPlayer(int userInput)
        {
            bool result = false;
            foreach (var player in _players)
            {
                if (userInput == player.PlayerId)
                    result = true;
            }
            return result;
        }
        
        public void CreatePlayer()
        {
            Console.WriteLine("Введите имя игрока");
            string name = Console.ReadLine();
            Console.WriteLine("Введите ID игрока");
            int id = Convert.ToInt32(Console.ReadLine());
            if (CheckPlayer(id))
                Console.WriteLine("Игрок с тайим ID уже существует, попробуйте заново");
            else
                _players.Add(new Player(name, id));
        }
        public void ShowAllPlayers()
        {
            foreach (var player in _players)
            {
                player.ShowInfo();
            }
        }
        public void DelitePlayer(int id)
        {
            _players.RemoveAt(FindPlayer(id));
        }
        public void BannedPlayer(int id)
        {
            int index = FindPlayer(id);
            _players[index].IsBanned = true;
        }
        public void UnBannedPlayer(int id)
        {
            int index = FindPlayer(id);
            _players[index].IsBanned = false;
        }
    }

    class Player
    {

        private string _playerName;
        private int _playerLevel;

        public int PlayerId { get; private set; }
        public bool IsBanned { get; set; }

        public Player(string name, int id)
        {
            _playerName = name;
            _playerLevel = 1;
            PlayerId = id;
            IsBanned = false;
        }

        public void ShowInfo()
        {
            if (IsBanned)
            {
                Console.WriteLine($"Игрок {_playerName} - {_playerLevel} уровня , под номером {PlayerId} сейчас забанен" );
            }
            else
            {
                Console.WriteLine($"Игрок {_playerName} - {_playerLevel}  уровня, под номером {PlayerId} сейчас не в бане");
            }
        }
    }

}
