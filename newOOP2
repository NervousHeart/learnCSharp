class Program
{
    static void Main()
    {
        BookStorage bookStorage = new BookStorage();
        bool isWork = true;

        while (isWork)
        {
            Console.WriteLine($"Нажмите \"1\", чтобы добавить книгу. \nНажмите \"2\", чтобы посмотреть все книги. \nНажмите \"3\", чтобы искать книги по году выпуска." +
                "\nНажмите \"4\", чтобы искать книгу по названию/автору. \nНажмите \"5\", чтобы убрать книгу. \nНажмите \"6\", чтобы выйти.");
            switch (Console.ReadLine())
            {
                case "1":
                    bookStorage.AddBook();
                    break;
                case "2":
                    bookStorage.ShowInfo();
                    break;
                case "3":
                    bookStorage.ShowInfo(GetNumber());
                    break;
                case "4":
                    bookStorage.ShowInfo(Console.ReadLine());
                    break;
                case "5":
                    bookStorage.DeliteBook(GetNumber());
                    break;
                case "6":
                    isWork = false;
                    break;
                default:
                    Console.WriteLine("Неправильный ввод");
                    break;
            }
            Console.ReadKey();
            Console.Clear();
        }
    }
    static int GetNumber()
    {
        Console.WriteLine("Введите число: ");
        string userInput = Console.ReadLine();
        bool successCount = int.TryParse(userInput, out int result);
        if (successCount)
            return result;
        else
        {
            Console.WriteLine("Неправильный ввод, попробуйте заново.");
            return 0;
        }
    }
}

class Book
{
    public string Name { get; private set; }
    public string Author { get; private set; }
    public int Date { get; private set; }

    public Book(string name, string author, int date)
    {
        Name = name;
        Author = author;
        Date = date;
    }
    public void ShowInfo()
    {
        Console.WriteLine($"Книга автора: {Author} под названием: {Name} - {Date} года выпуска");
    }
}

class BookStorage
{
    private List<Book> _books;

    public BookStorage()
    {
        _books = new List<Book>();
    }
    private int GetNumber()
    {
        string userInput = Console.ReadLine();
        bool successCount = int.TryParse(userInput, out int result);
        if (successCount)
            return result;
        else
        {
            Console.WriteLine("Неправильный ввод, попробуйте заново.");
            return 0;
        }
    }
    private void SearchBook(bool condition)
    {
        for (int i = 0; i < _books.Count; i++)
        {
            int temp = 0;
            temp++;
            if (condition)
            {
                temp--;
                Console.Write(i + " ");
                _books[i].ShowInfo();
            }
            else if (temp == _books.Count - 1)
            {
                Console.WriteLine("Таких книг нет");
            }
        }
    }

    public void DeliteBook(int number)
    {
        for (int i = 0; i < _books.Count; i++)
        {
            if (i == number)
            {
                _books.RemoveAt(i);
            }
            else
            {
                Console.WriteLine("Книги под таким номером нет.");
            }
        }
    }
    public void AddBook()
    {
        Console.WriteLine("Введите название книги: ");
        string bookName = Console.ReadLine();
        Console.WriteLine("Введите автора книги: ");
        string authorName = Console.ReadLine();
        Console.WriteLine("Введите год: ");
        int date = GetNumber();
        _books.Add(new Book(bookName, authorName, date));
    }
    public void ShowInfo()
    {
        for (int i = 0; i < _books.Count; i++)
        {
            Console.Write(i + " ");
            _books[i].ShowInfo();
        }
    }
    public void ShowInfo(int date)
    {
        for (int i = 0; i < _books.Count; i++)
        {
            SearchBook(_books[i].Date == date);
        }
    }
    public void ShowInfo(string authorOrName)
    {
        for (int i = 0; i < _books.Count; i++)
        {
            SearchBook(_books[i].Author.ToLower() == authorOrName.ToLower() || _books[i].Name.ToLower() == authorOrName.ToLower());
        }
    }
}
