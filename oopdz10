using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp5
{
    class Program
    {
        static void Main(string[] args)
        {
            bool isWork = true;
            Zoo zoo = new Zoo(4);

            while (isWork)
            {
                Console.WriteLine($"Вы в зоопарке, перед вами {zoo.CountEnclosures} вольера. Введите номер вальера к которому хотие подойти");
                zoo.ShowInfo(GetNumber()-1);
                Console.WriteLine("Чтобы выйти нажмите ESC, чтобы продолжить нажмите любую клавишу.");
                if (Console.ReadKey().Key == ConsoleKey.Escape)
                    isWork = false;
                else
                    Console.Clear();
            }
        }

        static int GetNumber()
        {
            string userInput = Console.ReadLine();
            bool successCount = int.TryParse(userInput, out int result);
            if (successCount)
                return result;
            else
            {
                Console.WriteLine("Неправильный ввод, попробуйте заново.");
                return 0;
            }
        }

        class Zoo
        {
            private List<Enclosur> _enclosures;
            private Random _random;

            public int CountEnclosures { get; private set; }

            public Zoo(int countEncloseres)
            {
                CountEnclosures = countEncloseres;
                _random = new Random();
                _enclosures = new List<Enclosur>();
                CreateZoo();
            }

            public void ShowInfo(int numberEnclosur)
            {
                for (int i = 0; i < _enclosures.Count; i++)
                {
                    if (numberEnclosur == i)
                        _enclosures[i].ShowInfo();
                }
            }

            private void CreateZoo()
            {
                for (int i = 0; i < CountEnclosures; i++)
                {
                    _enclosures.Add(new Enclosur(i, i, _random));
                }
            }
        }

        class Enclosur
        {
            private List<Animal> _animals;
            private int _countAnimal;
            private int _countMale;
            private int _countFemale;
            private Random _random;
            private int _numberAnimal;
            private int _numberEnclosur;

            public Enclosur(int numberAnimal, int numberEnclosur, Random random)
            {
                _animals = new List<Animal>();
                _countAnimal = random.Next(10, 21) ;
                _numberAnimal = numberAnimal;
                _numberEnclosur = numberEnclosur;
                _countMale = 0;
                _countFemale = 0;
                Populate();
                CalculateAnimalGender();
            }

            public void ShowInfo()
            {
                Console.WriteLine($"Перед вами вальер номер {_numberEnclosur+1}. Сейчас здесь находятся {_countAnimal} животных. Из них {_countMale} мужских особей и {_countFemale} женских.");
                _animals.ElementAt(_numberAnimal).ShowInfo();
            }

            public bool CheckAvailabilityAnimal()
            {
                if (_numberAnimal >= 0 && _numberAnimal <= Enum.GetValues(typeof(NameAnimal)).Length)
                {
                    return true;
                }
                else
                {
                    Console.WriteLine("Животных еще не привезли");
                    return false;
                }
            }

            private void CalculateAnimalGender()
            {
                if (_countAnimal % 2 == 1)
                {
                    _countFemale = _countAnimal / 2;
                    _countMale = _countAnimal / 2 + 1;
                }
                else
                {
                    _countFemale = _countAnimal / 2;
                    _countMale = _countAnimal / 2;
                }
            }

            private void Populate()
            {
                if (CheckAvailabilityAnimal())
                {
                    for (int i = 0; i < _countAnimal; i++)
                    {
                        _animals.Add(new Animal(_numberAnimal));
                    }
                }
            }
        }

        class Animal
        {
            private int _numberAnimal;

            public Animal(int numberAnimal)
            {
                _numberAnimal = numberAnimal;
            }

            public void ShowInfo()
            {
                    string nameAnimal = Convert.ToString((NameAnimal)_numberAnimal);
                    string noiseAnimal = Convert.ToString((NoisesAnimal)_numberAnimal);
                    Console.WriteLine($"В вальере находится {nameAnimal} и издает звук {noiseAnimal}");
            }
        }

        enum NameAnimal
        {
            Wolf,
            Penguin,
            Cow,
            Duck
        }

        enum NoisesAnimal
        {
            Auf,
            Pisk,
            Muuu,
            krya
        }
    }
}
